name: UI Test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  ui_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install ESP-IDF
        run: |
          ESP_IDF_VERSION="v5.3.2"
          sudo apt update
          sudo apt install -y python3-pip git wget flex bison gperf python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util
          wget https://dl.espressif.com/github_assets/espressif/esp-idf/releases/download/${ESP_IDF_VERSION}/esp-idf-${ESP_IDF_VERSION}.zip -O esp-idf.zip
          unzip esp-idf.zip -d ~/
          rm esp-idf.zip
          mv ~/esp-idf-${ESP_IDF_VERSION} ~/esp-idf
          ~/esp-idf/install.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn dependencies
        run: |
          yarn
          yarn install

      - name: Run Yarn script with xvfb
        run: |
          export IDF_TOOLS_PATH=~/.espressif
          export IDF_PATH=~/esp-idf
          source ~/esp-idf/export.sh && xvfb-run --auto-servernum yarn ci-test 2>&1 | tee test-output.log
          
          # Extract JSON from the output and save to file
          echo "Extracting JSON from test output..."
          if grep -q "Extension 'espressif.esp-idf-extension' was successfully uninstalled!" test-output.log; then
            # Extract everything after the uninstall message and find the JSON
            sed -n '/Extension '\''espressif.esp-idf-extension'\'' was successfully uninstalled!/,$p' test-output.log | sed -n '/^{/,/^}/p' > ./out/ui-test-results.json
            echo "JSON results extracted and saved to ./out/ui-test-results.json"
          else
            echo "Uninstall message not found, trying to extract JSON from entire output..."
            if grep -q '{' test-output.log; then
              sed -n '/^{/,/^}/p' test-output.log > ./out/ui-test-results.json
              echo "JSON results extracted and saved to ./out/ui-test-results.json"
            else
              echo "No JSON found in test output"
            fi
          fi

      - name: Print UI Test Results
        run: |
          echo "=== UI Test Results ==="
          if [ -f "./out/ui-test-results.json" ]; then
            echo "UI Test Results:"
            cat ./out/ui-test-results.json | jq '.' || echo "Could not parse UI test results"
          elif [ -f "./test-results.json" ]; then
            echo "UI Test Results:"
            cat ./test-results.json | jq '.' || echo "Could not parse UI test results"
          else
            echo "No UI test results file found"
            echo "Checking for other test output files:"
            find . -name "*test*results*" -o -name "*ui-test-results.json*" | head -10
          fi

      - name: Publish UI Test Report
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: UI Tests
          path: ./out/ui-test-results.json
          reporter: mocha-json
          fail-on-error: false

      - name: Upload UI test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ui-test-results
          path: |
            ./out/ui-test-results.json
            ./test-resources/screenshots/

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with: 
          name: screenshots
          path: /home/runner/work/vscode-esp-idf-extension/vscode-esp-idf-extension/test-resources/screenshots
