{
  "component": [
    {
      "isEnabled": false,
      "template": "SRCS ***",
      "regex": "(?:SRCS)([^)\n\r]*)",
      "title": "Component Sources (SRCS)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "EXCLUDE_SRCS ***",
      "regex": "(?:EXCLUDE_SRCS)([^)\n\r]*)",
      "title": "Remove files from static library build (EXCLUDE_SRCS)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "LDFRAGMENTS ***",
      "regex": "(?:LDFRAGMENTS)([^)\n\r]*)",
      "title": "Linker fragment files (LDFRAGMENTS)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "EMBED_FILES ***",
      "regex": "(?:EMBED_FILES)([^)\n\r]*)",
      "title": "Binary files to be embedded in the component (EMBED_FILES)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "EMBED_TXTFILES ***",
      "regex": "(?:EMBED_TXTFILES)([^)\n\r]*)",
      "title": "Text files to be embedded in the component (EMBED_TXTFILES)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "INCLUDE_DIRS ***",
      "regex": "(?:INCLUDE_DIRS)([^)\n\r]*)",
      "title": "Relative paths to the components (INCLUDE_DIRS) for all other components",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "PRIV_INCLUDE_DIRS ***",
      "regex": "(?:PRIV_INCLUDE_DIRS)([^)\n\r]*)",
      "title": "Relative paths to the components (PRIV_INCLUDE_DIRS) for this component",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "REQUIRES ***",
      "regex": "(?:REQUIRES)([^)\n\r]*)",
      "title": "Public component requirements for the component (REQUIRES)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "REQUIRED_IDF_TARGETS ***",
      "regex": "(?:REQUIRED_IDF_TARGETS)([^)\n\r]*)",
      "title": "Specify the only target the component supports (REQUIRED_IDF_TARGETS)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    },
    {
      "isEnabled": false,
      "template": "PRIV_REQUIRES ***",
      "regex": "(?:PRIV_REQUIRES)([^)\n\r]*)",
      "title": "Private component requirements for the component (PRIV_REQUIRES)",
      "type": "array",
      "value": [],
      "isComponentElement": true
    }
  ],
  "project": [
    {
      "default": "VERSION 3.5",
      "isEnabled": false,
      "regex": "(?:cmake_minimum_required\\()(.*)(?:\\))",
      "template": "cmake_minimum_required(***)",
      "title": "CMake Minimum Requirement",
      "type": "string",
      "value": "VERSION 3.5",
      "isComponentElement": false
    },
    {
      "isEnabled": false,
      "regex": "(?:include\\()(.*)(?:\\))",
      "template": "include(***)",
      "type": "string",
      "title": "Include ESP-IDF CMake",
      "value": "$ENV{IDF_PATH}/tools/cmake/project.cmake",
      "isComponentElement": false
    },
    {
      "isEnabled": false,
      "regex": "(?:project\\()(.*)(?:\\))",
      "template": "project(***)",
      "title": "Project Name",
      "type": "string",
      "value": "",
      "isComponentElement": false
    },
    {
      "isEnabled": false,
      "template": "SET(EXTRA_COMPONENT_DIRS, ***)",
      "regex": "(?:EXTRA_COMPONENT_DIRS)([^)\n\r]*)",
      "title": "List of additional components (EXTRA_COMPONENT_DIRS)",
      "type": "array",
      "value": [],
      "isComponentElement": false
    }
  ]
}
