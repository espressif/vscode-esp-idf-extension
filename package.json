{
  "name": "esp-idf-extension",
  "preview": true,
  "displayName": "Espressif IDF",
  "description": "Develop and debug applications for Espressif ESP32, ESP32-S2 chips with ESP-IDF",
  "version": "0.4.0",
  "license": "Apache-2.0",
  "publisher": "espressif",
  "icon": "media/espressif_icon.png",
  "galleryBanner": {
    "color": "#636363",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.30.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/espressif/vscode-esp-idf-extension.git"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other",
    "Debuggers"
  ],
  "keywords": [
    "ESP-IDF",
    "ESP",
    "Espressif",
    "ESP32",
    "ESP32-S2",
    "esp32",
    "esp32s2",
    "iot",
    "wifi",
    "soc"
  ],
  "activationEvents": [
    "onCommand:espIdf.createFiles",
    "onCommand:espIdf.addArduinoAsComponentToCurFolder",
    "onCommand:espIdf.createIdfTerminal",
    "onCommand:espIdf.createVsCodeFolder",
    "onCommand:espIdf.setPath",
    "onCommand:espIdf.selectConfTarget",
    "onCommand:espIdf.configDevice",
    "onCommand:menuconfig.start",
    "onCommand:espIdf.setDefaultConfig",
    "onCommand:espIdf.selectPort",
    "onCommand:espIdf.setTarget",
    "onCommand:espIdf.buildDevice",
    "onCommand:espIdf.flashDevice",
    "onCommand:espIdf.monitorDevice",
    "onCommand:espIdf.pickAWorkspaceFolder",
    "onCommand:espIdf.buildFlashMonitor",
    "onCommand:espIdf.cleanProject",
    "onCommand:espIdf.erase_flash",
    "onCommand:espIdf.size",
    "onCommand:espIdf.apptrace",
    "onCommand:espIdf.heaptrace",
    "onCommand:espIdf.openOCDCommand",
    "onCommand:espIdf.apptrace.archive.refresh",
    "onCommand:espIdf.apptrace.archive.showReport",
    "onCommand:espIdf.apptrace.customize",
    "onCommand:espIdf.getExtensionPath",
    "onCommand:espIdf.getOpenOcdConfigs",
    "onCommand:espIdf.genCoverage",
    "onCommand:espIdf.removeCoverage",
    "onCommand:espIdf.searchInEspIdfDocs",
    "onCommand:onboarding.start",
    "onCommand:examples.start",
    "onCommand:esp.rainmaker.backend.connect",
    "onCommand:esp.rainmaker.backend.sync",
    "onCommand:espIdf.getEspAdf",
    "onCommand:espIdf.getEspMdf",
    "onView:idfAppTracer",
    "onView:idfAppTraceArchive",
    "onView:espRainmaker",
    "onView:idfComponents",
    "workspaceContains:**/project_description.json",
    "workspaceContains:**/sdkconfig",
    "workspaceContains:**/CMakeLists.txt"
  ],
  "main": "./dist/extension",
  "contributes": {
    "problemMatchers": [
      {
        "name": "idfRelative",
        "owner": "cpp",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^\\.\\.(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      },
      {
        "name": "idfAbsolute",
        "owner": "cpp",
        "fileLocation": "absolute",
        "pattern": {
          "regexp": "^[^\\.](.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "idfViewController",
          "title": "ESP-IDF Explorer",
          "icon": "media/esp.svg"
        }
      ]
    },
    "views": {
      "idfViewController": [
        {
          "id": "idfAppTracer",
          "name": "IDF App Tracer"
        },
        {
          "id": "idfAppTraceArchive",
          "name": "App Trace Archives"
        },
        {
          "id": "espRainmaker",
          "name": "Rainmaker"
        }
      ],
      "explorer": [
        {
          "id": "idfComponents",
          "name": "%view.components.name%"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "espIdf.apptrace.customize",
          "when": "view == idfAppTracer"
        },
        {
          "command": "espIdf.apptrace.archive.refresh",
          "group": "navigation",
          "when": "view == idfAppTraceArchive"
        },
        {
          "command": "esp.rainmaker.backend.connect",
          "group": "navigation",
          "when": "view == espRainmaker && !rainmaker_logged_in"
        },
        {
          "command": "esp.rainmaker.backend.sync",
          "group": "navigation",
          "when": "view == espRainmaker"
        }
      ],
      "view/item/context": [
        {
          "command": "esp.rainmaker.backend.logout",
          "when": "view == espRainmaker && viewItem == account",
          "group": "inline"
        },
        {
          "command": "esp.rainmaker.backend.add_node",
          "when": "view == espRainmaker && viewItem == account",
          "group": "inline"
        },
        {
          "command": "esp.rainmaker.backend.remove_node",
          "when": "view == espRainmaker && viewItem == node",
          "group": "inline"
        },
        {
          "command": "esp.rainmaker.backend.update_node_param",
          "when": "view == espRainmaker && viewItem == param",
          "group": "inline"
        }
      ],
      "editor/context": [
        {
          "command": "espIdf.searchInEspIdfDocs",
          "group": "navigation",
          "when": "editorHasSelection"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceFilename == sdkconfig",
          "command": "menuconfig.start",
          "group": "navigation"
        }
      ]
    },
    "keybindings": [
      {
        "command": "espIdf.createFiles",
        "key": "ctrl+e c",
        "mac": "cmd+e c"
      },
      {
        "command": "espIdf.buildDevice",
        "key": "ctrl+e b",
        "mac": "cmd+e b"
      },
      {
        "command": "espIdf.flashDevice",
        "key": "ctrl+e f",
        "mac": "cmd+e f"
      },
      {
        "command": "espIdf.monitorDevice",
        "key": "ctrl+e m",
        "mac": "cmd+e m"
      },
      {
        "command": "espIdf.createIdfTerminal",
        "key": "ctrl+e t",
        "mac": "cmd+e t"
      },
      {
        "command": "espIdf.selectPort",
        "key": "ctrl+e p",
        "mac": "cmd+e p"
      },
      {
        "command": "espIdf.buildFlashMonitor",
        "key": "ctrl+e d",
        "mac": "cmd+e d"
      },
      {
        "command": "menuconfig.start",
        "key": "ctrl+e g",
        "mac": "cmd+e g"
      },
      {
        "command": "espIdf.size",
        "key": "ctrl+e s",
        "mac": "cmd+e s"
      },
      {
        "command": "espIdf.searchInEspIdfDocs",
        "key": "ctrl+e d",
        "mac": "cmd+e d"
      }
    ],
    "configuration": [
      {
        "title": "%configuration.title%",
        "properties": {
          "idf.espIdfPath": {
            "type": "string",
            "default": "${env:IDF_PATH}",
            "description": "%param.espIdfPath%",
            "scope": "resource"
          },
          "idf.espAdfPath": {
            "type": "string",
            "default": "${env:ADF_PATH}",
            "description": "%param.espAdfPath%",
            "scope": "resource"
          },
          "idf.espMdfPath": {
            "type": "string",
            "default": "${env:MDF_PATH}",
            "description": "%param.espMdfPath%",
            "scope": "resource"
          },
          "idf.toolsPath": {
            "type": "string",
            "default": "${env:HOME}/.espressif",
            "description": "%param.toolsPath%",
            "scope": "resource"
          },
          "idf.espIdfPathWin": {
            "type": "string",
            "default": "${env:IDF_PATH}",
            "description": "%param.espIdfPath%",
            "scope": "resource"
          },
          "idf.espAdfPathWin": {
            "type": "string",
            "default": "${env:ADF_PATH}",
            "description": "%param.espAdfPath%",
            "scope": "resource"
          },
          "idf.espMdfPathWin": {
            "type": "string",
            "default": "${env:MDF_PATH}",
            "description": "%param.espMdfPath%",
            "scope": "resource"
          },
          "idf.toolsPathWin": {
            "type": "string",
            "default": "${env:USERPROFILE}\\.espressif",
            "description": "%param.toolsPath%",
            "scope": "resource"
          },
          "idf.port": {
            "type": "string",
            "default": "/dev/ttyUSB1",
            "description": "%param.port%",
            "scope": "resource"
          },
          "idf.portWin": {
            "type": "string",
            "default": "COM1",
            "description": "%param.port%",
            "scope": "resource"
          },
          "idf.pythonBinPath": {
            "type": "string",
            "default": "python",
            "description": "%param.pythonBinPath%",
            "scope": "resource"
          },
          "idf.pythonBinPathWin": {
            "type": "string",
            "default": "python",
            "description": "%param.pythonBinPath%",
            "scope": "resource"
          },
          "idf.baudRate": {
            "type": "string",
            "default": "115200",
            "description": "%param.baudRate%",
            "scope": "resource"
          },
          "idf.openOcdConfigs": {
            "type": "array",
            "default": [
              "interface/ftdi/esp32_devkitj_v1.cfg",
              "board/esp32-wrover.cfg"
            ],
            "description": "%param.openOcdConfigFilesList%",
            "scope": "resource"
          },
          "idf.adapterTargetName": {
            "type": "string",
            "default": "esp32",
            "enum": [
              "esp32",
              "esp32s2"
            ],
            "enumDescriptions": [
              "esp32",
              "esp32"
            ],
            "description": "%param.adapterTargetName%",
            "scope": "resource"
          },
          "idf.customExtraPaths": {
            "type": "string",
            "default": "",
            "description": "%param.exportPaths%",
            "scope": "resource"
          },
          "idf.customExtraVars": {
            "type": "string",
            "description": "%param.exportVars%",
            "scope": "resource"
          },
          "idf.useIDFKconfigStyle": {
            "type": "boolean",
            "default": false,
            "scope": "resource",
            "description": "%param.useIDFKConfigStyle%"
          },
          "idf.showOnboardingOnInit": {
            "type": "boolean",
            "default": true,
            "scope": "resource",
            "description": "%param.showOnboardingOnInit%"
          },
          "trace.poll_period": {
            "type": "string",
            "default": "1",
            "scope": "resource",
            "description": "%trace.poll_period.description%"
          },
          "trace.trace_size": {
            "type": "string",
            "default": "2048",
            "scope": "resource",
            "description": "%trace.trace_size.description%"
          },
          "trace.stop_tmo": {
            "type": "string",
            "default": "5",
            "scope": "resource",
            "description": "%trace.stop_tmo.description%"
          },
          "trace.wait4halt": {
            "type": "string",
            "default": "0",
            "scope": "resource",
            "description": "%trace.wait4halt.description%"
          },
          "trace.skip_size": {
            "type": "string",
            "default": "0",
            "scope": "resource",
            "description": "%trace.skip_size.description%"
          },
          "idf.saveBeforeBuild": {
            "type": "boolean",
            "default": true,
            "scope": "resource",
            "description": "%param.saveBeforeBuildDescription%"
          },
          "idf.saveScope": {
            "type": "number",
            "default": "1",
            "enum": [
              1,
              2,
              3
            ],
            "enumDescriptions": [
              "Global",
              "Workspace",
              "WorkspaceFolder"
            ],
            "scope": "resource",
            "description": "%param.saveScope%"
          },
          "idf.telemetry": {
            "title": "Enable Telemetry",
            "type": "boolean",
            "default": true,
            "description": "Send anonymous telemetry and crash report back to the extension (change to the settings will require restart for immediate effect)"
          },
          "esp.rainmaker.api.server_url": {
            "type": "string",
            "default": "https://api.rainmaker.espressif.com/v1/",
            "scope": "resource",
            "description": "%param.rainmaker.api.server_url%"
          },
          "esp.rainmaker.oauth.url": {
            "type": "string",
            "default": "https://auth.rainmaker.espressif.com/oauth2/authorize",
            "scope": "resource",
            "description": "%param.esp.rainmaker.oauth.url%"
          },
          "idf.coveredLightTheme": {
            "type": "string",
            "default": "rgba(0,128,0,0.1)",
            "description": "%param.coveredLightTheme%",
            "scope": "resource"
          },
          "idf.partialDarkTheme": {
            "type": "string",
            "default": "rgba(250,218,94,0.1)",
            "description": "%param.partialDarkTheme%",
            "scope": "resource"
          },
          "idf.partialLightTheme": {
            "type": "string",
            "default": "rgba(250,218,94,0.1)",
            "description": "%param.partialLightTheme%",
            "scope": "resource"
          },
          "idf.coveredDarkTheme": {
            "type": "string",
            "default": "rgba(0,128,0,0.1)",
            "description": "%param.coveredDarkTheme%",
            "scope": "resource"
          },
          "idf.uncoveredLightTheme": {
            "type": "string",
            "default": "rgba(255,0,0,0.1)",
            "description": "%param.uncoveredLightTheme%",
            "scope": "resource"
          },
          "idf.uncoveredDarkTheme": {
            "type": "string",
            "default": "rgba(255,0,0,0.1)",
            "description": "%param.uncoveredDarkTheme%",
            "scope": "resource"
          },
          "idf.wssPort": {
            "type": "number",
            "default": 49203,
            "description": "%idf.wssPort.description%",
            "scope": "resource",
            "minimum": 49152,
            "maximum": 65535
          }
        }
      }
    ],
    "commands": [
      {
        "command": "espIdf.createFiles",
        "title": "%espIdf.createFiles.title%"
      },
      {
        "command": "espIdf.addArduinoAsComponentToCurFolder",
        "title": "%espIdf.addArduinoAsComponentToCurFolder.title%"
      },
      {
        "command": "espIdf.createVsCodeFolder",
        "title": "%espIdf.createVsCodeFolder.title%"
      },
      {
        "command": "espIdf.createIdfTerminal",
        "title": "%espIdf.createIdfTerminal.title%"
      },
      {
        "command": "espIdf.setPath",
        "title": "%espIdf.setPath.title%"
      },
      {
        "command": "espIdf.selectConfTarget",
        "title": "%espIdf.selectConfTarget.title%"
      },
      {
        "command": "espIdf.setTarget",
        "title": "%espIdf.setTarget.title%"
      },
      {
        "command": "espIdf.configDevice",
        "title": "%espIdf.configDevice.title%"
      },
      {
        "command": "menuconfig.start",
        "title": "%menuconfig.start.title%"
      },
      {
        "command": "onboarding.start",
        "title": "%espIdf.onboarding.title%"
      },
      {
        "command": "examples.start",
        "title": "%espIdf.examples.title%"
      },
      {
        "command": "espIdf.setDefaultConfig",
        "title": "%espIdf.setDefaultConfig.title%"
      },
      {
        "command": "espIdf.selectPort",
        "title": "%espIdf.selectPort.title%"
      },
      {
        "command": "espIdf.buildDevice",
        "title": "%espIdf.buildDevice.title%"
      },
      {
        "command": "espIdf.flashDevice",
        "title": "%espIdf.flashDevice.title%"
      },
      {
        "command": "espIdf.monitorDevice",
        "title": "%espIdf.monitorDevice.title%"
      },
      {
        "command": "espIdf.buildFlashMonitor",
        "title": "%espIdf.buildFlashMonitor.title%"
      },
      {
        "command": "espIdf.pickAWorkspaceFolder",
        "title": "%espIdf.pickAWorkspaceFolder.title%"
      },
      {
        "command": "espIdf.size",
        "title": "%espIdf.size.title%"
      },
      {
        "command": "espIdf.apptrace",
        "title": "%espIdf.apptrace.title%"
      },
      {
        "command": "espIdf.heaptrace",
        "title": "%espIdf.heaptrace.title%"
      },
      {
        "command": "espIdf.openOCDCommand",
        "title": "%espIdf.openOCDCommand.title%"
      },
      {
        "command": "espIdf.apptrace.archive.refresh",
        "title": "%espIdf.apptrace.archive.refresh.title%",
        "icon": {
          "dark": "media/dark/refresh.svg",
          "light": "media/light/refresh.svg"
        }
      },
      {
        "command": "espIdf.apptrace.archive.showReport",
        "title": "%espIdf.apptrace.archive.showReport.title%"
      },
      {
        "command": "espIdf.apptrace.customize",
        "title": "%espIdf.apptrace.customize.title%"
      },
      {
        "command": "esp.rainmaker.backend.connect",
        "title": "%esp.rainmaker.backend.connect.title%",
        "category": "ESP:Rainmaker",
        "icon": {
          "dark": "media/dark/sign-in.svg",
          "light": "media/light/sign-in.svg"
        }
      },
      {
        "command": "esp.rainmaker.backend.sync",
        "title": "%esp.rainmaker.backend.sync.title%",
        "category": "ESP:Rainmaker",
        "icon": {
          "dark": "media/dark/refresh.svg",
          "light": "media/light/refresh.svg"
        }
      },
      {
        "command": "esp.rainmaker.backend.logout",
        "title": "%esp.rainmaker.backend.logout.title%",
        "category": "ESP:Rainmaker",
        "icon": {
          "dark": "media/dark/sign-out.svg",
          "light": "media/light/sign-out.svg"
        }
      },
      {
        "command": "esp.rainmaker.backend.add_node",
        "title": "%esp.rainmaker.backend.add_node.title%",
        "category": "ESP:Rainmaker",
        "icon": {
          "dark": "media/dark/add.svg",
          "light": "media/light/add.svg"
        }
      },
      {
        "command": "esp.rainmaker.backend.remove_node",
        "title": "%esp.rainmaker.backend.remove_node.title%",
        "category": "ESP:Rainmaker",
        "icon": {
          "dark": "media/dark/trash.svg",
          "light": "media/light/trash.svg"
        }
      },
      {
        "command": "esp.rainmaker.backend.update_node_param",
        "title": "%esp.rainmaker.backend.update_node_param.title%",
        "category": "ESP-Rainmaker",
        "icon": {
          "dark": "media/dark/edit.svg",
          "light": "media/light/edit.svg"
        }
      },
      {
        "command": "espIdf.genCoverage",
        "title": "%espIdf.genCoverage.title%"
      },
      {
        "command": "espIdf.removeCoverage",
        "title": "%espIdf.removeCoverage.title%"
      },
      {
        "command": "espIdf.getCoverageReport",
        "title": "%espIdf.getCoverageReport.title%"
      },
      {
        "command": "espIdf.launchWSServerAndMonitor",
        "category": "ESP-IDF",
        "title": "%espIdf.launchWSServerAndMonitor.title%"
      },
      {
        "command": "espIdf.searchInEspIdfDocs",
        "title": "%espIdf.searchInEspIdfDocs.title%"
      },
      {
        "command": "espIdf.getEspAdf",
        "title": "%espIdf.getEspAdf.title%"
      },
      {
        "command": "espIdf.getEspMdf",
        "title": "%espIdf.getEspMdf.title%"
      }
    ],
    "breakpoints": [
      {
        "language": "c"
      },
      {
        "language": "cpp"
      }
    ],
    "debuggers": [
      {
        "type": "espidf",
        "label": "ESP-IDF",
        "languages": [
          "cpp"
        ],
        "runtime": "python",
        "configurationAttributes": {
          "launch": {
            "properties": {
              "debugPort": {
                "type": "number",
                "description": "Port for ESP-IDF Debug Adapter. Default: 43474",
                "default": 43474
              },
              "logLevel": {
                "type": "number",
                "description": "Log level for ESP-IDF Debug Adapter",
                "default": 2
              },
              "mode": {
                "type": "string",
                "description": "ESP-IDF debug session mode",
                "default": "auto",
                "enum": [
                  "auto",
                  "manual"
                ],
                "enumDescriptions": [
                  "Auto mode will execute a OpenOCD Server and Debug Adapter in Visual Studio Code",
                  "Manual mode requires you to run OpenOCD and Debug Adapter separately"
                ]
              },
              "env": {
                "type": "object",
                "description": "Environments variables override in Visual Studio Code launched ESP-IDF Debug Adapter",
                "default": null
              },
              "initGdbCommands": {
                "type": "array",
                "description": "%esp_idf.initGdbCommands.description%",
                "items": {
                  "type": "string",
                  "description": "%esp_idf.debuggers.text.description%",
                  "default": ""
                },
                "default": []
              },
              "gdbinitFile": {
                "type": "string",
                "description": "%esp_idf.gdbinitFile.description%",
                "default": ""
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "%debug.initConfig.name%",
            "type": "espidf",
            "request": "launch",
            "preLaunchTask": "adapter"
          }
        ],
        "configurationSnippets": [
          {
            "name": "%debug.initConfig.name%",
            "type": "espidf",
            "request": "launch",
            "preLaunchTask": "adapter"
          }
        ]
      }
    ],
    "languages": [
      {
        "id": "kconfig",
        "aliases": [
          "Kconfig",
          "kconfig"
        ],
        "extensions": [
          "Kconfig.projbuild",
          "Kconfig.in",
          "Kconfig"
        ],
        "configuration": "./kconfig-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "kconfig",
        "scopeName": "source.kconfig",
        "path": "./syntaxes/kconfig.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "kconfig",
        "path": "./snippets/kconfig.code-snippets"
      }
    ],
    "taskDefinitions": [
      {
        "type": "esp-idf",
        "properties": {
          "command": {
            "type": "string",
            "description": "Command to be executed"
          }
        }
      }
    ]
  },
  "extensionDependencies": [
    "ms-vscode.cpptools"
  ],
  "scripts": {
    "vscode:prepublish": "gulp build && webpack --mode production",
    "lint": "prettier --check **/*.*",
    "debugPreTask": "webpack --mode development",
    "compile": "tsc -p ./",
    "watch": "webpack --watch --mode development",
    "test": "tsc -p ./ && node ./out/test/runTest.js --VERBOSE 2>&1 >> testing.results.log",
    "package": "vsce package --yarn -o esp-idf-extension.vsix",
    "release": "vsce publish --yarn -p ${VS_MARKETPLACE_TOKEN}",
    "gulp_clean": "gulp clean",
    "validateLocalization": "gulp validateLocalization",
    "webpack": "webpack --mode production"
  },
  "devDependencies": {
    "@fortawesome/fontawesome-free": "^5.9.0",
    "@fortawesome/fontawesome-svg-core": "^1.2.21",
    "@fortawesome/free-solid-svg-icons": "^5.10.1",
    "@fortawesome/vue-fontawesome": "^0.1.6",
    "@types/follow-redirects": "^1.8.0",
    "@types/fs-extra": "^8.0.1",
    "@types/glob": "^7.1.1",
    "@types/marked": "^1.1.0",
    "@types/mocha": "^5.2.7",
    "@types/nock": "^9.3.1",
    "@types/node": "^7.10.9",
    "@types/tmp": "0.0.33",
    "@types/vscode": "^1.30.0",
    "@types/ws": "^7.2.5",
    "@types/yauzl": "^2.9.1",
    "@vue/component-compiler-utils": "^3.0.0",
    "bulma": "^0.7.5",
    "css-loader": "^3.1.0",
    "file-loader": "^4.0.0",
    "glob": "^7.1.4",
    "gulp": "^4.0.2",
    "gulp-cli": "^2.0.1",
    "gulp-typescript": "^5.0.0-alpha.3",
    "html-webpack-plugin": "^3.2.0",
    "husky": "^2.5.0",
    "mocha": "^7.1.1",
    "mocha-junit-reporter": "^1.23.3",
    "nock": "^10.0.6",
    "node-sass": "^4.13.0",
    "prettier": "2.0.2",
    "pretty-quick": "^2.0.1",
    "reflect-metadata": "^0.1.13",
    "sass-loader": "^7.1.0",
    "style-loader": "^0.23.1",
    "ts-loader": "^7.0.5",
    "tslint": "^5.18.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.3.0",
    "tslint-webpack-plugin": "^2.1.0",
    "typescript": "^3.9.5",
    "typescript-tslint-plugin": "^0.3.1",
    "vsce": "^1.52.0",
    "vscode-nls-dev": "^3.3.1",
    "vscode-test": "^1.0.0",
    "vue-class-component": "^7.1.0",
    "vue-hot-reload-api": "^2.3.2",
    "vue-loader": "^15.7.1",
    "vue-property-decorator": "^8.2.1",
    "vue-router": "^3.0.2",
    "vue-style-loader": "^4.1.2",
    "vue-template-compiler": "^2.6.10",
    "vuex-class": "^0.3.2",
    "webpack": "^4.42.0",
    "webpack-cli": "^3.3.11"
  },
  "dependencies": {
    "ansi-to-html": "^0.6.11",
    "axios": "^0.19.2",
    "del": "^4.1.1",
    "es6-promisify": "^6.0.0",
    "follow-redirects": "^1.6.1",
    "fs-extra": "^8.1.0",
    "https-proxy-agent": "^3.0.0",
    "interactjs": "^1.9.18",
    "marked": "^0.7.0",
    "plotly.js-dist": "^1.54.1",
    "tar-fs": "^2.0.0",
    "tree-kill": "^1.2.2",
    "vscode-debugadapter": "^1.33.0",
    "vscode-debugadapter-testsupport": "^1.34.0",
    "vscode-debugprotocol": "^1.33.0",
    "vscode-extension-telemetry": "^0.1.6",
    "vscode-languageclient": "^5.2.1",
    "vscode-languageserver": "^5.2.1",
    "vscode-nls": "^4.0.0",
    "vue": "^2.6.10",
    "vue-scroll": "^2.1.12",
    "vue-the-mask": "^0.11.1",
    "vuex": "^3.1.1",
    "winston": "^2.3.1",
    "ws": "^7.3.0",
    "yauzl": "^2.10.0"
  },
  "alias": {
    "vue": "./node_modules/vue/dist/vue.esm.js"
  },
  "azure": {
    "insight": {
      "key": "912cbb4e-e606-4c4f-9a00-1731acb15117"
    }
  }
}
